# .goreleaser.yaml (Reverting to 'format' for debugging)

# Version of the GoReleaser configuration syntax
version: 2

# Used for things like the archive name, defaults to the repository name (git-util)
project_name: git-util

# Build configuration
builds:
  - # Unique ID for the build
    id: git-util
    # Entry point for the application
    main: ./main.go
    # Target platforms to build for (examples)
    goos:
      - linux
      - darwin # macOS
      - windows
    goarch:
      - amd64 # Intel/AMD 64-bit
      # - arm64 # Apple Silicon / ARM 64-bit
    # ldflags can inject version information at build time
    ldflags:
      # -s -w strips debug information, making the binary smaller
      - -s -w
      # Inject values into variables in the 'cmd' package
      - -X github.com/OmSingh2003/git-util/cmd.version={{.Version}}
      - -X github.com/OmSingh2003/git-util/cmd.commit={{.Commit}}
      - -X github.com/OmSingh2003/git-util/cmd.date={{.Date}}
    binary: git-util # Name of the output binary

# Archive configuration
archives:
  - # id: default # <-- Removed this line
    # Name template for the archive files
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    # Reverting to 'format' temporarily for debugging
    format: tar.gz # <-- Reverted from 'formats' list
    # Add README and LICENSE files to the archive
    files:
      - README.md
      - LICENSE

# Generate checksums for archives
checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
  algorithm: sha256

# Generate a changelog based on Git commit messages
changelog:
  sort: asc # Sort commits oldest to newest
  filters:
    exclude:
      - "^Merge branch"
      - "^Merge pull request"
      - "(?i)^chore:"
      - "(?i)^docs:"
      - "(?i)^test:"
      - "(?i)^build:"
      - "(?i)^ci:"

# Snapshot releases (for testing without a Git tag)
snapshot:
  # Default naming is usually sufficient

# GitHub Releases configuration
release:
  draft: false
  prerelease: auto
  github:
    owner: OmSingh2003
    name: git-util
  name_template: "{{.ProjectName}} {{.Version}}"

# Homebrew Tap configuration
brews:
  - name: git-util
    repository:
      owner: OmSingh2003
      name: homebrew-git-util
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/OmSingh2003/git-util"
    description: "A command-line utility tool for common Git operations."
    install: |
      bin.install "git-util"
    test: |
      system "#{bin}/git-util version"
